steps:
# --- ÉTAPE 1: Build du Frontend avec Node.js v20 ---
- name: 'node:20'
  entrypoint: 'npm'
  args: ['install']
- name: 'node:20'
  entrypoint: 'npm'
  args: ['run', 'build']

# --- ÉTAPE 2: Déploiement sur Firebase Hosting ---
- name: 'node:20'
  entrypoint: 'npx'
  args: ['-p', 'firebase-tools', 'firebase', 'deploy', '--only', 'hosting:eventflow-ifc', '--project', '${PROJECT_ID}']

# --- [RÉACTIVÉ] ÉTAPE 3: Build de l'image Docker du Backend ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/eventflow-repo/eventflow-backend:$SHORT_SHA', '.']
  dir: 'backend' 

# --- [RÉACTIVÉ] ÉTAPE 4: Push de l'image sur Artifact Registry ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/eventflow-repo/eventflow-backend:$SHORT_SHA']
  dir: 'backend'

# --- [RÉACTIVÉ] ÉTAPE 5: Déploiement sur Cloud Run ---
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'eventflow-backend' # Le nom de votre service Cloud Run
    - '--image=asia-southeast1-docker.pkg.dev/${PROJECT_ID}/eventflow-repo/eventflow-backend:$SHORT_SHA'
    - '--region=asia-southeast1'
    - '--platform=managed'
    - '--allow-unauthenticated' # Important pour que Firebase Hosting puisse communiquer avec
    # [IMPORTANT] Connecte le service Cloud Run à la base de données
    - '--add-cloudsql-instances=eventflow-ifc:asia-southeast1:eventflow-ifc-db'
    # [IMPORTANT] Définit la variable d'environnement pour le mot de passe
    - '--set-env-vars=DB_PASSWORD=${_DB_PASSWORD}'

# Spécifie les images à stocker
images:
- 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/eventflow-repo/eventflow-backend:$SHORT_SHA'

# Options de journalisation
options:
  logging: CLOUD_LOGGING_ONLY
